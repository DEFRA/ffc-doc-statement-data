// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loadIntermTotal should call sequelize.query with correct parameters 1`] = `
[MockFunction] {
  "calls": [
    [
      "
WITH grouped AS (
  SELECT
    D."transdate",
    D."quarter",
    D."claimId",
    SUM(D."transactionAmount") AS "totalAmount"
  FROM public."etlIntermFinanceDax" D
  WHERE D."etlInsertedDt" > :startDate
  GROUP BY D."transdate", D."quarter", D."claimId"
),
ranked AS (
  SELECT
    g."transdate",
    g."quarter",
    g."claimId",
    g."totalAmount",
    D."paymentRef",
    D."invoiceid",
    ROW_NUMBER() OVER (
      PARTITION BY g."transdate", g."quarter", g."claimId"
      ORDER BY
        CASE WHEN D."paymentRef" LIKE 'PY%' THEN 0 ELSE 1 END,
        D."transactionAmount" DESC,
        NULLIF(CAST(RIGHT(D."invoiceid", 1) AS INTEGER), NULL)
    ) AS rn
  FROM grouped g
  JOIN public."etlIntermFinanceDax" D
    ON D."transdate" = g."transdate"
    AND D."quarter" = g."quarter"
    AND D."claimId" = g."claimId"
    AND D."etlInsertedDt" > :startDate
)
INSERT INTO public."etlIntermTotal" (
  "paymentRef", "quarter", "totalAmount",
  "transdate", "invoiceid"
)
SELECT
  "paymentRef", 
  "quarter",
  "totalAmount",
  "transdate",
  "invoiceid"
FROM ranked
WHERE rn = 1 
ORDER BY "paymentRef";
",
      {
        "raw": true,
        "replacements": {
          "startDate": 2023-01-01T00:00:00.000Z,
        },
        "transaction": {},
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
