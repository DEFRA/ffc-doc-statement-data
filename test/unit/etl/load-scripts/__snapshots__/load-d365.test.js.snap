// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loadD365 should call sequelize.query with correct SQL and parameters 1`] = `
[MockFunction] {
  "calls": [
    [
      "
    WITH unique_rows AS (
      SELECT DISTINCT ON (T."paymentRef", T."calculationId")
        T."paymentRef" AS "paymentReference",
        T."calculationId" AS "calculationId",
        T.quarter AS "paymentPeriod",
        T."totalAmount" AS "paymentAmount",
        T.transdate AS "transactionDate",
        T.marketingyear AS "marketingYear"
      FROM public."etlIntermTotal" T
      JOIN public."delinkedCalculation" D ON T."calculationId" = D."calculationId"
      WHERE T."etlInsertedDt" > :startDate
      ORDER BY T."paymentRef", T."calculationId", T."etlInsertedDt" DESC
    )
    INSERT INTO public.d365 (
      "paymentReference", "calculationId", "paymentPeriod",
      "paymentAmount", "transactionDate", "marketingYear"
    )
    SELECT 
      "paymentReference", "calculationId", "paymentPeriod",
      "paymentAmount", "transactionDate", "marketingYear"
    FROM unique_rows
    ON CONFLICT ("paymentReference", "calculationId")
    DO UPDATE SET
      "paymentAmount" = EXCLUDED."paymentAmount",
      "datePublished" = NULL;
  ",
      {
        "raw": true,
        "replacements": {
          "startDate": "2023-01-01",
        },
        "transaction": {},
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
